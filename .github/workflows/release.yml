name: release

on:
  push:
    branches:
      - release

jobs:
  # Cut a release tag based on conventional-commits and semantic-release, and publish it.
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Auth as CI/CD bot
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.FENSAK_CICD_BOT_APP_ID }}
          private_key: ${{ secrets.FENSAK_CICD_BOT_PRIVATE_KEY }}

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version: "lts/*"

      - name: release
        run: npx -y semantic-release@^22.0.5
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

  # Deploy to prod environment.
  deployprod:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Needed to auth to Deno Deploy
      checks: write # Needed for GHA to write the checks for the job
      contents: read
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - uses: denoland/deployctl@b841621a76eae438b09e1bce5e74549678c24e7f # v1.8.2
        with:
          project: fensak
          entrypoint: main.ts
